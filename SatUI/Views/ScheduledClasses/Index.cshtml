@model IEnumerable<Sat.Data.EF.ScheduledClass>

@{
    ViewBag.Title = "Schedule Classes";
}

<div class="pageWrap">
    <h2>@ViewBag.Title</h2>

    @if (User.IsInRole("Admin") || User.IsInRole("Scheduling"))
    {
        <p>
            @Html.ActionLink("Add New Class", "Create")
        </p>
    }



    @*<tr>
            <th>
                @Html.DisplayNameFor(model => model.InstructorName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Location)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EndDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EnrollmentMax)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Cours.CourseName)
            </th>
            <th></th>
        </tr>*@

    @foreach (var item in Model)
    {
        var color = "";
        switch (item.ScheduledClassID)
        {
            case 1:
                color = "#7cbb00";
                break;
            case 2:
                color = "#ffbb00";
                break;
            case 7:
                color = "#a903b3";
                break;
            case 8:
                color = "#ec4f13";
                break;
        }

        <div class="cardBox col-lg-12 col-sm-1">
            <div class="span3">
                <div class="well well-primary box" style="background-color:@color">
                    <ul>
                        <li>
                            @Html.DisplayFor(modelItem => item.InstructorName)
                        </li>
                        <li>
                            @Html.DisplayFor(modelItem => item.Location)
                        </li>
                        <li>
                            @Html.DisplayFor(modelItem => item.StartDate)
                        </li>
                        <li>
                            @Html.DisplayFor(modelItem => item.EndDate)
                        </li>
                        <li>
                            @Html.DisplayFor(modelItem => item.EnrollmentMax)
                        </li>
                        @if (User.IsInRole("Admin") || User.IsInRole("Scheduling"))
                {
                            <li>
                                @Html.ActionLink(item.Cours.CourseName, "Details", new { id = item.ScheduledClassID})
                            </li>
                        }
                        else
                        {
                            <li>
                                @Html.DisplayFor(modelItem => item.Cours.CourseName)
                            </li>
                        }

                        @if (Request.IsAuthenticated)
                {
                            <li>
                                @Html.ActionLink("Edit", "Edit", new { id = item.ScheduledClassID })

                                @if (User.IsInRole("Admin"))
                    {
                                    @:| @Html.ActionLink("Delete", "Delete", new { id = item.ScheduledClassID })
                    }

                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    }


</div>
